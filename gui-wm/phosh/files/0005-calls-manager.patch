From ebecb70a3049d6f538cce30e64026d0929c05ace Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Fri, 14 May 2021 18:53:38 +0200
Subject: [PATCH 1/9] screenshot-manager: Remove opaque handler in dispose
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Guido Günther <guido.gunther@puri.sm>
---
 src/screenshot-manager.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/src/screenshot-manager.c b/src/screenshot-manager.c
index 00ff5efa..51df85dc 100644
--- a/src/screenshot-manager.c
+++ b/src/screenshot-manager.c
@@ -55,8 +55,9 @@ typedef struct _PhoshScreenshotManager {
   ScreencopyFrame                   *frame;

   PhoshFader                        *fader;
-  PhoshFader                        *opaque;
   guint                              fader_id;
+  PhoshFader                        *opaque;
+  guint                              opaque_id;
 } PhoshScreenshotManager;


@@ -188,9 +189,10 @@ on_opaque_timeout (PhoshScreenshotManager *self)
   gtk_clipboard_set_image (clipboard, self->frame->pixbuf);
   g_debug ("Updated clipboard with %p", self->frame);
   screencopy_done (self, TRUE);
+
  out:
   g_clear_pointer (&self->opaque, phosh_cp_widget_destroy);
-
+  self->opaque_id = 0;
   return G_SOURCE_REMOVE;
 }

@@ -288,7 +290,9 @@ screencopy_frame_handle_ready (void                            *data,
     self->frame->pixbuf = g_steal_pointer (&pixbuf);
     /* FIXME: Would be better to trigger when the opaque window is up and got
        input focus but all such attempts failed */
-    g_timeout_add_seconds (1, (GSourceFunc) on_opaque_timeout, self);
+    self->opaque_id = g_timeout_add_seconds (1, (GSourceFunc) on_opaque_timeout, self);
+    g_source_set_name_by_id (self->opaque_id, "[phosh] screenshot opaque");
+
     gtk_widget_show (GTK_WIDGET (self->opaque));
   }
   return;
@@ -493,6 +497,7 @@ phosh_screenshot_manager_dispose (GObject *object)
     g_dbus_interface_skeleton_unexport (G_DBUS_INTERFACE_SKELETON (self));

   g_clear_handle_id (&self->fader_id, g_source_remove);
+  g_clear_handle_id (&self->opaque_id, g_source_remove);
   g_clear_pointer (&self->fader, phosh_cp_widget_destroy);

   G_OBJECT_CLASS (phosh_screenshot_manager_parent_class)->dispose (object);
--
GitLab


From 116a4fe763073b9c01126a6b069f17761e31d262 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Fri, 14 May 2021 18:57:01 +0200
Subject: [PATCH 2/9] screenshot-manager: Actually set fader_id
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

It got cleared but never set.

Signed-off-by: Guido Günther <guido.gunther@puri.sm>
---
 src/screenshot-manager.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/screenshot-manager.c b/src/screenshot-manager.c
index 51df85dc..8bb64c0a 100644
--- a/src/screenshot-manager.c
+++ b/src/screenshot-manager.c
@@ -121,6 +121,7 @@ on_fader_timeout (gpointer user_data)

   g_clear_pointer (&self->fader, phosh_cp_widget_destroy);

+  self->fader_id = 0;
   return G_SOURCE_REMOVE;
 }

@@ -130,7 +131,8 @@ show_fader (PhoshScreenshotManager *self)
 {
   PhoshMonitor *monitor = phosh_shell_get_primary_monitor (phosh_shell_get_default ());

-  g_timeout_add (FLASH_FADER_TIMEOUT, on_fader_timeout, self);
+  self->fader_id = g_timeout_add (FLASH_FADER_TIMEOUT, on_fader_timeout, self);
+  g_source_set_name_by_id (self->fader_id, "[phosh] screenshot fader");
   self->fader = g_object_new (PHOSH_TYPE_FADER,
                               "monitor", monitor,
                               "style-class", "phosh-fader-flash-fade",
--
GitLab


From e6808f57ece2cec5b6265e7678f6f3c6edef0f06 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Fri, 14 May 2021 18:12:34 +0200
Subject: [PATCH 3/9] lockscreen-manager: Shorten property enum values
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This is what we recommend in Hacking.md.

Signed-off-by: Guido Günther <guido.gunther@puri.sm>
---
 src/lockscreen-manager.c | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/src/lockscreen-manager.c b/src/lockscreen-manager.c
index e34fb4b4..afcdb6ba 100644
--- a/src/lockscreen-manager.c
+++ b/src/lockscreen-manager.c
@@ -42,11 +42,11 @@ enum {
 static guint signals[N_SIGNALS] = { 0 };

 enum {
-  PHOSH_LOCKSCREEN_MANAGER_PROP_0,
-  PHOSH_LOCKSCREEN_MANAGER_PROP_LOCKED,
-  PHOSH_LOCKSCREEN_MANAGER_PROP_LAST_PROP
+  PROP_0,
+  PROP_LOCKED,
+  PROP_LAST_PROP
 };
-static GParamSpec *props[PHOSH_LOCKSCREEN_MANAGER_PROP_LAST_PROP];
+static GParamSpec *props[PROP_LAST_PROP];


 struct _PhoshLockscreenManager {
@@ -84,7 +84,7 @@ lockscreen_unlock_cb (PhoshLockscreenManager *self, PhoshLockscreen *lockscreen)

   self->locked = FALSE;
   self->active_time = 0;
-  g_object_notify_by_pspec (G_OBJECT (self), props[PHOSH_LOCKSCREEN_MANAGER_PROP_LOCKED]);
+  g_object_notify_by_pspec (G_OBJECT (self), props[PROP_LOCKED]);
 }


@@ -248,7 +248,7 @@ lockscreen_lock (PhoshLockscreenManager *self)

   self->locked = TRUE;
   self->active_time = g_get_monotonic_time ();
-  g_object_notify_by_pspec (G_OBJECT (self), props[PHOSH_LOCKSCREEN_MANAGER_PROP_LOCKED]);
+  g_object_notify_by_pspec (G_OBJECT (self), props[PROP_LOCKED]);
 }


@@ -272,7 +272,7 @@ phosh_lockscreen_manager_set_property (GObject      *object,
   PhoshLockscreenManager *self = PHOSH_LOCKSCREEN_MANAGER (object);

   switch (property_id) {
-  case PHOSH_LOCKSCREEN_MANAGER_PROP_LOCKED:
+  case PROP_LOCKED:
     phosh_lockscreen_manager_set_locked (self, g_value_get_boolean (value));
     break;
   default:
@@ -291,7 +291,7 @@ phosh_lockscreen_manager_get_property (GObject    *object,
   PhoshLockscreenManager *self = PHOSH_LOCKSCREEN_MANAGER (object);

   switch (property_id) {
-  case PHOSH_LOCKSCREEN_MANAGER_PROP_LOCKED:
+  case PROP_LOCKED:
     g_value_set_boolean (value, self->locked);
     break;
   default:
@@ -341,13 +341,14 @@ phosh_lockscreen_manager_class_init (PhoshLockscreenManagerClass *klass)
   object_class->set_property = phosh_lockscreen_manager_set_property;
   object_class->get_property = phosh_lockscreen_manager_get_property;

-  props[PHOSH_LOCKSCREEN_MANAGER_PROP_LOCKED] =
+  props[PROP_LOCKED] =
     g_param_spec_boolean ("locked",
                           "Locked",
                           "Whether the screen is locked",
                           FALSE,
                           G_PARAM_READWRITE | G_PARAM_EXPLICIT_NOTIFY | G_PARAM_STATIC_STRINGS);
-  g_object_class_install_properties (object_class, PHOSH_LOCKSCREEN_MANAGER_PROP_LAST_PROP, props);
+
+  g_object_class_install_properties (object_class, PROP_LAST_PROP, props);

   /**
    * PhoshLockscreenManager::wakeup-outputs
--
GitLab


From 3214736fe1b5f4abd31d4dec6a2b6ae5b0033395 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Thu, 8 Apr 2021 10:21:55 +0200
Subject: [PATCH 4/9] proximity: Fix function spacing
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Guido Günther <guido.gunther@puri.sm>
---
 src/proximity.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/src/proximity.c b/src/proximity.c
index 89e1c863..169fba3f 100644
--- a/src/proximity.c
+++ b/src/proximity.c
@@ -65,6 +65,7 @@ on_proximity_claimed (PhoshSensorProxyManager *sensor_proxy_manager,
   }
 }

+
 static void
 on_proximity_released (PhoshSensorProxyManager *sensor_proxy_manager,
                        GAsyncResult            *res,
@@ -89,6 +90,7 @@ on_proximity_released (PhoshSensorProxyManager *sensor_proxy_manager,
   g_clear_pointer (&self->fader, phosh_cp_widget_destroy);
 }

+
 static void
 phosh_proximity_claim_proximity (PhoshProximity *self, gboolean claim)
 {
@@ -192,6 +194,7 @@ phosh_proximity_set_property (GObject *object,
   }
 }

+
 static void
 phosh_proximity_get_property (GObject *object,
                              guint property_id,
@@ -213,6 +216,7 @@ phosh_proximity_get_property (GObject *object,
   }
 }

+
 static void
 phosh_proximity_constructed (GObject *object)
 {
@@ -237,6 +241,7 @@ phosh_proximity_constructed (GObject *object)
   G_OBJECT_CLASS (phosh_proximity_parent_class)->constructed (object);
 }

+
 static void
 phosh_proximity_dispose (GObject *object)
 {
@@ -260,6 +265,7 @@ phosh_proximity_dispose (GObject *object)
   G_OBJECT_CLASS (phosh_proximity_parent_class)->dispose (object);
 }

+
 static void
 phosh_proximity_class_init (PhoshProximityClass *klass)
 {
@@ -291,6 +297,7 @@ phosh_proximity_class_init (PhoshProximityClass *klass)

 }

+
 static void
 phosh_proximity_init (PhoshProximity *self)
 {
--
GitLab


From dac5f658ffef409c29bd45735a777e0d8d35bad8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Wed, 7 Apr 2021 15:02:13 +0200
Subject: [PATCH 5/9] lockscreen: Drop style class
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

We set it in the ui file already.

Signed-off-by: Guido Günther <guido.gunther@puri.sm>
---
 src/lockscreen.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/src/lockscreen.c b/src/lockscreen.c
index 61ed356f..2992d12d 100644
--- a/src/lockscreen.c
+++ b/src/lockscreen.c
@@ -442,10 +442,6 @@ phosh_lockscreen_constructed (GObject *object)
   gtk_window_set_decorated (GTK_WINDOW (self), FALSE);
   gtk_widget_realize(GTK_WIDGET (self));

-  gtk_style_context_add_class (
-      gtk_widget_get_style_context (GTK_WIDGET (self)),
-      "phosh-lockscreen");
-
   gtk_widget_add_events (GTK_WIDGET (self), GDK_KEY_PRESS_MASK);
   g_signal_connect (G_OBJECT (self),
                     "key_press_event",
--
GitLab


From c7571db13a0874dba50860c5ccb7703fcbe7bf7d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Wed, 7 Apr 2021 15:06:32 +0200
Subject: [PATCH 6/9] Drop HANDY_USE_UNSTABLE_API
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Libhany's API isn't unstable anymore

Signed-off-by: Guido Günther <guido.gunther@puri.sm>
---
 src/lockscreen.c                        | 1 -
 src/notifications/notification-banner.c | 1 -
 src/overview.c                          | 1 -
 3 files changed, 3 deletions(-)

diff --git a/src/lockscreen.c b/src/lockscreen.c
index 2992d12d..d367e262 100644
--- a/src/lockscreen.c
+++ b/src/lockscreen.c
@@ -20,7 +20,6 @@
 #include <math.h>
 #include <time.h>

-#define HANDY_USE_UNSTABLE_API
 #include <handy.h>

 #define GNOME_DESKTOP_USE_UNSTABLE_API
diff --git a/src/notifications/notification-banner.c b/src/notifications/notification-banner.c
index a85f27c7..fbdda5ad 100644
--- a/src/notifications/notification-banner.c
+++ b/src/notifications/notification-banner.c
@@ -14,7 +14,6 @@
 #include "shell.h"
 #include "util.h"

-#define HANDY_USE_UNSTABLE_API
 #include <handy.h>

 /**
diff --git a/src/overview.c b/src/overview.c
index 790b4ee3..088bda00 100644
--- a/src/overview.c
+++ b/src/overview.c
@@ -23,7 +23,6 @@

 #include <gio/gdesktopappinfo.h>

-#define HANDY_USE_UNSTABLE_API
 #include <handy.h>

 #define OVERVIEW_ICON_SIZE 64
--
GitLab


From c0cd6cee102242fe0cfd82b3bf5d0bfd75a841cd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Guido=20G=C3=BCnther?= <agx@sigxcpu.org>
Date: Tue, 6 Apr 2021 16:56:34 +0200
Subject: [PATCH 7/9] Add calls manager
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This tracks ongoing calls via the sm.puri.Calls DBus interface.
This can be used to (e.g. activate the proximity sensor and to
unblank the screen on incoming calls).

Signed-off-by: Guido Günther <guido.gunther@puri.sm>
---
 docs/phosh-docs.xml             |   1 +
 src/calls-manager.c             | 418 ++++++++++++++++++++++++++++++++
 src/calls-manager.h             |  24 ++
 src/dbus/meson.build            |   6 +
 src/dbus/sm.puri.Calls.Call.xml |  39 +++
 src/meson.build                 |   2 +
 src/shell.c                     |  17 ++
 src/shell.h                     |   2 +
 8 files changed, 509 insertions(+)
 create mode 100644 src/calls-manager.c
 create mode 100644 src/calls-manager.h
 create mode 100644 src/dbus/sm.puri.Calls.Call.xml

diff --git a/docs/phosh-docs.xml b/docs/phosh-docs.xml
index 7a1bab7b..57ffbb8f 100644
--- a/docs/phosh-docs.xml
+++ b/docs/phosh-docs.xml
@@ -50,6 +50,7 @@
       <xi:include href="xml/batteryinfo.xml"/>
       <xi:include href="xml/bt-manager.xml"/>
       <xi:include href="xml/bt-info.xml"/>
+      <xi:include href="xml/calls-manager.xml"/>
       <xi:include href="xml/connectivity-info.xml"/>
       <xi:include href="xml/dbus-notification.xml"/>
       <xi:include href="xml/docked-info.xml"/>
diff --git a/src/dbus/meson.build b/src/dbus/meson.build
index 0424cc39..613df7e8 100644
--- a/src/dbus/meson.build
+++ b/src/dbus/meson.build
@@ -62,6 +62,12 @@ generated_dbus_sources += gnome.gdbus_codegen('mpris-dbus',
 					      'org.mpris.MediaPlayer2.xml',
 					      interface_prefix: 'org.mpris',
 					      namespace: 'PhoshMprisDBus')
+# Calls
+generated_dbus_sources += gnome.gdbus_codegen('calls-dbus',
+                                              'sm.puri.Calls.Call.xml',
+                                              object_manager: true,
+                                              interface_prefix: 'sm.puri',
+                                              namespace: 'PhoshCallsDBus')

 generated_dbus_sources += gnome.gdbus_codegen('phosh-wwan-ofono-dbus',
                                               'org.ofono.xml',
diff --git a/src/dbus/sm.puri.Calls.Call.xml b/src/dbus/sm.puri.Calls.Call.xml
new file mode 100644
index 00000000..78ecafb5
--- /dev/null
+++ b/src/dbus/sm.puri.Calls.Call.xml
@@ -0,0 +1,39 @@
+<!DOCTYPE node PUBLIC
+        "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
+        "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
+
+<!--
+        Copyright (C) 2021 Purism SPC
+
+        This library is free software; you can redistribute it and/or
+        modify it under the terms of the GNU Lesser General Public
+        License as published by the Free Software Foundation; either
+        version 3 of the License, or (at your option) any later version.
+
+        This library is distributed in the hope that it will be useful,
+        but WITHOUT ANY WARRANTY; without even the implied warranty of
+        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+        Lesser General Public License for more details.
+
+        You should have received a copy of the GNU Lesser General
+        Public License along with this library; if not, see <http://www.gnu.org/licenses/>.
+-->
+
+<node>
+
+  <interface name="sm.puri.Calls.Call">
+    <method name="Accept"/>
+    <method name="Hangup"/>
+    <property name="Inbound" type="b" access="read"/>
+    <property name="State" type="u" access="read"/>
+    <property name="Id" type="s" access="read">
+      <doc:doc>
+        <doc:description>
+          <doc:para>The Id identifying the call, e.g. a phone number</doc:para>
+        </doc:description>
+      </doc:doc>
+    </property>
+    <property name="Party" type="s" access="read"/>
+  </interface>
+
+</node>
diff --git a/src/meson.build b/src/meson.build
index c755f450..38c95248 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -57,6 +57,8 @@ libphosh_tool_sources = files(
   'app-list-model.h',
   'background.c',
   'background.h',
+  'calls-manager.c',
+  'calls-manager.h',
   'connectivity-info.c',
   'connectivity-info.h',
   'end-session-dialog.c',
diff --git a/src/shell.c b/src/shell.c
index c5894fde..2120e1f8 100644
--- a/src/shell.c
+++ b/src/shell.c
@@ -30,6 +30,7 @@
 #include "bt-info.h"
 #include "bt-manager.h"
 #include "connectivity-info.h"
+#include "calls-manager.h"
 #include "docked-info.h"
 #include "docked-manager.h"
 #include "fader.h"
@@ -111,6 +112,7 @@ typedef struct

   PhoshSessionManager *session_manager;
   PhoshBackgroundManager *background_manager;
+  PhoshCallsManager *calls_manager;
   PhoshMonitor *primary_monitor;
   PhoshMonitor *builtin_monitor;
   PhoshMonitorManager *monitor_manager;
@@ -356,6 +358,7 @@ phosh_shell_dispose (GObject *object)

   /* dispose managers in opposite order of declaration */
   g_clear_object (&priv->screenshot_manager);
+  g_clear_object (&priv->calls_manager);
   g_clear_object (&priv->location_manager);
   g_clear_object (&priv->hks_manager);
   g_clear_object (&priv->docked_manager);
@@ -723,6 +726,7 @@ phosh_shell_constructed (GObject *object)
                                     "/sm/puri/phosh/icons");
   css_setup (self);

+  priv->calls_manager = phosh_calls_manager_new ();
   priv->lockscreen_manager = phosh_lockscreen_manager_new ();
   g_object_bind_property (priv->lockscreen_manager, "locked",
                           self, "locked",
@@ -934,6 +938,19 @@ phosh_shell_get_background_manager (PhoshShell *self)
 }


+PhoshCallsManager *
+phosh_shell_get_calls_manager (PhoshShell *self)
+{
+  PhoshShellPrivate *priv;
+
+  g_return_val_if_fail (PHOSH_IS_SHELL (self), NULL);
+  priv = phosh_shell_get_instance_private (self);
+  g_return_val_if_fail (PHOSH_IS_CALLS_MANAGER (priv->calls_manager), NULL);
+
+  return priv->calls_manager;
+}
+
+
 PhoshWifiManager *
 phosh_shell_get_wifi_manager (PhoshShell *self)
 {
--
GitLab
